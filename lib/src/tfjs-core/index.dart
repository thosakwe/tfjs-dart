@JS() library tfjs.node_modules._tensorflow.tfjs_core.dist ; import "package:js/js.dart" ;
 import "adadelta_optimizer.dart" show AdadeltaOptimizer ;
 import "adagrad_optimizer.dart" show AdagradOptimizer ;
 import "adam_optimizer.dart" show AdamOptimizer ;
 import "adamax_optimizer.dart" show AdamaxOptimizer ;
 import "momentum_optimizer.dart" show MomentumOptimizer ;
 import "optimizer.dart" show Optimizer ;
 import "rmsprop_optimizer.dart" show RMSPropOptimizer ;
 import "sgd_optimizer.dart" show SGDOptimizer ;
 import "tensor.dart" show Tensor, TensorBuffer, variable, Variable ;
 import "types.dart" show ShapeMap ;
 import "weights_loader.dart" show loadWeights ;
 import "lstm.dart" show LSTMCellFunc ;
 import "environment.dart" show ENV, Environment, Features ;
 import "engine.dart" show TimingInfo ;
 import "version.dart" show version ;
 import "doc.dart" show doc ;
 import "backend_webgl.dart" show WebGLTimingInfo ;
 import "backend.dart" show KernelBackend, BackendTimingInfo ;
export "adadelta_optimizer.dart" show AdadeltaOptimizer ;
 export "adagrad_optimizer.dart" show AdagradOptimizer ;
 export "adam_optimizer.dart" show AdamOptimizer ;
 export "adamax_optimizer.dart" show AdamaxOptimizer ;
 export "momentum_optimizer.dart" show MomentumOptimizer ;
 export "optimizer.dart" show Optimizer ;
 export "rmsprop_optimizer.dart" show RMSPropOptimizer ;
 export "sgd_optimizer.dart" show SGDOptimizer ;
 export "tensor.dart" show Tensor<Rank.R0>, Tensor, Tensor<Rank.R1>, Tensor<Rank.R2>, Tensor<Rank.R3>, Tensor<Rank.R4>, TensorBuffer, variable, Variable ;
 export "types.dart" show keyof, num/*enum Rank*/, ShapeMap ;
 export "weights_loader.dart" show List<WeightsManifestGroupConfig> ;
 export "weights_loader.dart" show loadWeights ;
 export "ops.dart" ;
 export "lstm.dart" show LSTMCellFunc ;
 export "loss_ops.dart" show num/*enum Reduction*/ ;
 export "train.dart" ;
 export "globals.dart" ;
 export "environment.dart" show ENV, Environment, Features ;
 @JS() external dynamic get setBackend; @JS() external dynamic get getBackend; @JS() external dynamic get memory; export "engine.dart" show TimingInfo ;
 export show version ;
 export "doc.dart" show doc ;
 @JS() external dynamic get nextFrame; export show environment, test_util, util ;
 @JS() external dynamic/*{
    webgl_util: typeof webgl_util;
    gpgpu_util: typeof gpgpu_util;
}*/ get webgl; export "backend_webgl.dart" show WebGLTimingInfo ;
 export "backend.dart" show KernelBackend, BackendTimingInfo ;

